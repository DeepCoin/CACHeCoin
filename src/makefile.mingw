# Copyright (c) 2009-2010 Satoshi Nakamoto
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

CXX ?= g++

USE_UPNP:=-
USE_IPV6:=1

BOOST_SUFFIX?=-mgw46-mt-sd-1_54

INCLUDEPATHS= \
 -I"$(CURDIR)" \
 -I"$(CURDIR)/scrypt-jane" \
 -I"c:/deps/boost_1_54_0" \
 -I"c:/deps/db-4.8.30.NC/build_unix" \
 -I"c:/deps/openssl-1.0.1e"	

LIBPATHS= \
 -L"c:/deps/boost_1_54_0/stage/lib" \
 -L"c:/deps/db-4.8.30.NC/build_unix" \
 -L"c:/deps/openssl-1.0.1e"

LIBS= \
 -l boost_system$(BOOST_SUFFIX) \
 -l boost_filesystem$(BOOST_SUFFIX) \
 -l boost_program_options$(BOOST_SUFFIX) \
 -l boost_thread$(BOOST_SUFFIX) \
 -l boost_chrono$(BOOST_SUFFIX) \
 -l db_cxx \
 -l ssl \
 -l crypto

DEFS= \
	-DWIN32 \
	-D_WINDOWS \
	-DBOOST_THREAD_USE_LIB \
	-DBOOST_SPIRIT_THREADSAFE \
	-DSCRYPT_CHACHA \
	-DSCRYPT_KECCAK512 \
	-DSCRYPT_CHOOSE_COMPILETIME \
	-DO2

DEBUGFLAGS=-g

CFLAGS= \
	-mthreads \
	-O2 \
	-msse2 \
	-w -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter \
	$(DEBUGFLAGS) \
	$(DEFS) \
	$(INCLUDEPATHS)

LDFLAGS= \
	-Wl,--dynamicbase \
	-Wl,--nxcompat \
	-Wl,--large-address-aware \
	-static

TESTDEFS = -DTEST_DATA_DIR=$(abspath test/data)

ifndef USE_UPNP
	override USE_UPNP = -
endif
ifneq (${USE_UPNP}, -)
 INCLUDEPATHS += -I"c:/deps/miniupnpc-1.8"
 LIBPATHS += -L"c:/deps/miniupnpc-1.8"
 LIBS += -l miniupnpc -l iphlpapi
 DEFS += -DSTATICLIB -DUSE_UPNP=$(USE_UPNP)
endif

ifneq (${USE_IPV6}, -)
	DEFS += -DUSE_IPV6=$(USE_IPV6)
endif

LIBS += \
	-l kernel32 \
	-l user32 \
	-l gdi32 \
	-l comdlg32 \
	-l winspool \
	-l winmm \
	-l shell32 \
	-l comctl32 \
	-l ole32 \
	-l oleaut32 \
	-l uuid \
	-l rpcrt4 \
	-l advapi32 \
	-l ws2_32 \
	-l mswsock \
	-l shlwapi

# TODO: make the mingw builds smarter about dependencies, like the linux/osx builds are
HEADERS = $(wildcard *.h)

OBJS= \
    obj/addrman.o \
    obj/alert.o \
    obj/bitcoinrpc.o \
    obj/checkpoints.o \
    obj/crypter.o \
    obj/db.o \
    obj/init.o \
  obj/irc.o \
  obj/kernel.o \
    obj/key.o \
    obj/keystore.o \
    obj/main.o \
    obj/net.o \
    obj/netbase.o \
    obj/noui.o \
  obj/pbkdf2.o \
    obj/protocol.o \
    obj/rpcblockchain.o \
    obj/rpcdump.o \
    obj/rpcmining.o \
    obj/rpcnet.o \
    obj/rpcrawtransaction.o \
    obj/rpcwallet.o \
    obj/script.o \
  obj/scrypt-jane.o \
  obj/scrypt_mine.o \
  obj/scrypt-x86.o \
    obj/sync.o \
    obj/util.o \
    obj/version.o \
    obj/wallet.o \
    obj/walletdb.o 

all: cachecoind.exe

test check: test_cachecoin.exe FORCE
	test_cachecoin.exe

DEFS += $(addprefix -I,c:/deps/openssl-1.0.1e/include)

obj/scrypt-jane.o: scrypt-jane/scrypt-jane.c 
	g++ -c -frandom-seed=$@ $(CFLAGS) -MMD -o $@ $<

obj/%.o: %.cpp $(HEADERS)
	g++ -c -frandom-seed=$@ $(CFLAGS) -o $@ $<

obj/scrypt-x86.o: scrypt-x86.S
	$(CXX) -c -frandom-seed=$@ $(xCXXFLAGS) -MMD -o $@ $<

cachecoind.exe: $(OBJS:obj/%=obj/%)
	g++ $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ $(LIBS)

TESTOBJS := $(patsubst test/%.cpp,obj-test/%.o,$(wildcard test/*.cpp))

obj-test/%.o: test/%.cpp $(HEADERS)
	g++ -c $(TESTDEFS) $(CFLAGS) -o $@ $<

test_cachecoin.exe: $(TESTOBJS) $(filter-out obj/init.o,$(OBJS:obj/%=obj/%))
	g++ $(CFLAGS) $(LDFLAGS) -o $@ $(LIBPATHS) $^ -lboost_unit_test_framework $(LIBS)

clean:
	-del /Q cachecoind test_cachecoin
	-del /Q obj\*
	-del /Q obj-test\*

FORCE:
